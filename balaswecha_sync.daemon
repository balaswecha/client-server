#!/bin/bash

PID_FILE="/var/run/bsyncd/bsyncd.pid"
CUR_USER=`/usr/bin/whoami`
CMD="python3 /usr/lib/balaswecha/balaswecha-sync/api/versions.py"

kill_proc() {
    /usr/bin/pkill -u root -f "$CMD"
}

start_daemon() {
    eval exec nohup "$*"
}

log_success_msg() {
    echo $1
}

log_failure_msg() {
    echo $1
}

check_proc() {
    /usr/bin/pgrep -u root -f "$CMD"
}

start_bsyncd() {
    if [ "${CUR_USER}" != "root" ]; then
        log_failure_msg "bsyncd can only be started as 'root' user."
        exit 4
    fi

    check_proc
    if [ $? -eq 0 ]; then
        log_success_msg "bsyncd already running on http://$HOSTNAME:8080"
        exit 0
    fi

    [ -d /var/run/bsyncd ] || (mkdir /var/run/bsyncd && chown -R root:root /var/run/bsyncd)

    start_daemon "$CMD" >> /dev/null 2>&1 &
    echo $! >$PID_FILE


    # Sleep for a while 
    sleep 2
    check_proc

    if [ $? -eq 0 ]; then
        log_success_msg "Started bsyncd on http://$HOSTNAME:8080"
    else
        log_failure_msg "Error starting bsyncd."
        exit -1
    fi
}

stop_bsyncd() {
    if [ "${CUR_USER}" != "root" ]; then
        log_failure_msg "You do not have permission to stop bsyncd"
        exit 4
    fi

    check_proc

    if [ $? -eq 0 ]; then
        kill_proc

        # Make sure it's dead before we return
        until [ $? -ne 0 ]; do
            sleep 1
            check_proc
        done
    
        check_proc
        if [ $? -eq 0 ]; then
            log_failure_msg "Error stopping bsyncd."
            exit -1
        else
            log_success_msg "Stopped bsyncd."
        fi
    else
        log_failure_msg "bsyncd is not running"
    fi
}

bsyncd_status() {
    check_proc
    if [ $? -eq 0 ]; then
	    log_success_msg "bsyncd is running."
    else
	    log_failure_msg "bsyncd is stopped."
      exit 3
    fi
}

case "$1" in
    start)
        start_bsyncd
        ;;
    stop)
        stop_bsyncd
        ;;
    restart)
        stop_bsyncd
        start_bsyncd
        ;;
    status)
        bsyncd_status
        ;;
    *)
        echo "Usage: $0 {start|stop|restart|status}"
        exit 1
esac

exit 0

